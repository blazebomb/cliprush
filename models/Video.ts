import mongoose, { Schema, model, models } from "mongoose";

// This sets default video dimensions used during transformations.
// It ensures that every video can have a standard width and height unless specified differently.
export const VIDEO_DIMENSIONS = {
  width: 1080,
  height: 1920,
} as const;

// TypeScript interface describing the shape of a Video document
export interface IVideo {
  id?: mongoose.Types.ObjectId; // Optional ID (auto-generated by MongoDB)
  title: string; // Video title
  description: string; // Description text for the video
  videoUrl: string; // URL/path to the actual video file
  thumbnailUrl: string; // URL/path to the thumbnail image
  controls?: boolean; // Optional flag to show/hide player controls
  transformation?: {
    // Optional transformation options (for frontend or processing)
    height: number;
    width: number;
    quality?: number;
  };
  createdAt?: Date;
  updatedAt?: Date;
}

// Define the Mongoose schema for the video collection
const videoSchema = new Schema<IVideo>(
  {
    title: { type: String, required: true },
    description: { type: String, required: true },
    videoUrl: { type: String, required: true },
    thumbnailUrl: { type: String, required: true },
    controls: { type: Boolean, default: true },
    transformation: {
      height: { type: Number, default: VIDEO_DIMENSIONS.height },
      width: { type: Number, default: VIDEO_DIMENSIONS.width },
      quality: { type: Number, default: 1, max: 100 },
    },
  },
  { timestamps: true }
);

// Check if a Video model already exists (important in dev with hot-reloading).
// If it exists, reuse it. If not, create it using our schema.
const Video = models?.Video || model<IVideo>("Video", videoSchema);

export default Video;
